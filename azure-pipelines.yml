# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: qdt-components
    type: github
    endpoint: github.com_demo_team
    name: qlik-demo-team/qdt-components
  - repository: qdt-apps
    type: github
    endpoint: github.com_demo_team
    name: qlikit/qdt-apps
  - repository: qdt-components-ci
    type: git
    name: qdt-components-ci/qdt-components-ci

variables:
  JQ_VERSION: 1.5

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true
  # clean: true
- checkout: qdt-components
- checkout: qdt-apps
  persistCredentials: true
- checkout: qdt-components-ci

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

# - script: |
#     # sudo mkdir /usr/bin/jq
#     sudo chmod +x /usr/bin/jq
#     ls -la /usr/bin 
#     wget --no-check-certificate https://github.com/stedolan/jq/releases/download/jq-$(JQ_VERSION)/jq-linux64 -O /tmp/jq-linux64 && \
#     sudo cp /tmp/jq-linux64 /usr/bin/jq
#   displayName: 'Install JQ'

- script: |
    mkdir npm
    cd ./qdt-components
    npm install
    npm audit fix
    npm run build
    cd ../
    cp -r ./qdt-components/dist ./npm
    cp ./qdt-components/LICENSE ./npm/LICENSE
    cp ./qdt-components/package.json ./npm/package.json
    cp ./qdt-components/readme.md ./npm/readme.md
  displayName: 'Build qdt-components'

- script: |
    VER=$(jq -r ".version" < ./qdt-components/package.json)
    echo $VER
    cd ./qdt-apps
    mkdir ./qdt-components/$VER
    git config --global user.email "yianni.ververis@qlik.com"
    git config --global user.name "Yianni Ververis"
    # git pull origin master
    # git checkout -b ci
    cp -r ../qdt-components ./qdt-components/$VER
    # git add .
    # git commit -m "qdt-components $VER"
    # git checkout master
    # git merge ci 
    # git branch -d ci
    # # git push origin master
    ECHO SOURCE BRANCH IS %BUILD_SOURCEBRANCH%
    IF %BUILD_SOURCEBRANCH% == refs/heads/master (
      ECHO Building master branch so no merge is needed.
      EXIT
    )
    SET sourceBranch=origin/%BUILD_SOURCEBRANCH:refs/heads/=%
    ECHO GIT CHECKOUT MASTER
    git checkout master
    ECHO GIT STATUS
    git status
    ECHO GIT MERGE
    git merge %sourceBranch% -m "Merge to master"
    ECHO GIT STATUS
    git status
    ECHO GIT PUSH
    git push origin
    ECHO GIT STATUS
    git status
  displayName: 'CDN'

# - task: Npm@1
#   inputs:
#     command: 'publish'
#     workingDir: './npm'
#     publishEndpoint: 'npmjs.com_demo_team'
#   displayName: 'Npm publish'
